<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fest">

	<insert id="insert" parameterType="festivalVO">
		insert into festival values
		(#{fstv_no}, #{fstv_title}, #{fstv_startdate}, #{fstv_enddate},
		#{fstv_addr1}, #{fstv_mapx}, #{fstv_mapy}, #{fstv_image},
		#{fstv_tel}, #{fstv_eventinfo}, #{fstv_eventcont}, #{fstv_usetimefestival},
		#{fstv_eventplace}, #{fstv_playtime}, #{fstv_homepage}, 0)
	</insert>
	
	<!-- 진행중인 축제 찜순으로 정렬 완료 -->
	<select id="bannerlist" resultType="festivalVO">
		select * from festival
		where fstv_startdate &lt;= current_date()
		and fstv_enddate &gt;= current_date()
		order by fstv_jjimCount desc limit 3
	</select>
	
	<select id="endlist" resultType="festivalVO">
		select * from festival where fstv_startdate
		&lt;= current_date() and fstv_enddate &gt;= current_date()
		and fstv_image is not null
		and datediff(fstv_enddate, current_date()) &lt;=21 order by fstv_enddate
	</select>
	
		<!-- 페이지 갯수 계산, 리스트까지 완료 -->
	<select id="cnt" resultType="int">
		select count(*) from festival where fstv_startdate
		&lt;= current_date() and fstv_enddate &gt;= current_date()
		and fstv_image is not null
		and datediff(fstv_enddate, current_date()) &lt;=21 order by fstv_enddate
	</select>
	
	<!-- 축제 리스트 불러오는데 조금 수정사항 있음 이거 토대로 아래쪽에 수정 진행중 -->
	<!-- 사용은 안하지만 일단 코드는 남겨둠 -->
	<select id="list" resultType="festivalVO" parameterType="festivalPageVO">
		select * from (
		(select * from festival where fstv_startdate &lt;= current_date() and fstv_enddate &gt;= current_date() order by fstv_enddate)
		union all
		(select * from festival	where fstv_startdate &gt; current_date() order by fstv_startdate)
		union all
		(select * from festival	where fstv_enddate &lt; current_date() order by fstv_startdate desc)
		) as result limit #{index}, 9
	</select>
	
	<!-- 현재 진행중인 축제 / 시작날짜가 가까운게 먼저 전으로 뒤로 -->
	<select id="list1" resultType="festivalVO">
		select * from festival where fstv_startdate &lt;= current_date() and fstv_enddate &gt;= current_date() order by fstv_startdate desc
	</select>
	<!-- 시작 예정인 축제 / 시작날짜가 가까운게 먼저 멀수록 뒤로 -->
	<select id="list2" resultType="festivalVO">
		select * from festival	where fstv_startdate &gt; current_date() order by fstv_startdate
	</select>
	<!-- 완료된 축제 / 정렬은 예정인 축제와 동일 -->
	<select id="list3" resultType="festivalVO">
		select * from festival	where fstv_enddate &lt; current_date() order by fstv_startdate desc
	</select>
	
	<!-- 축제 상세 데이터 가져오는 sql -->
	<select id="one" parameterType="festivalVO" resultType="festivalVO">
		select * from festival where fstv_no = ${fstv_no}
	</select>
	
	<!-- 축제 리스트 찜 횟수별 정렬 sql -->
	<select id="jjim" parameterType="festivalVO" resultType="festivalVO">
		select * from festival order by fstv_jjimCount desc limit #{index}, 9
	</select>
	
	<!-- 축제 리스트 기간별 검색 sql -->
	<select id="date" parameterType="festivalPageVO" resultType="festivalVO">
		select * from festival where fstv_startdate &gt;= #{date1} and fstv_enddate &lt;= #{date2} order by fstv_startdate
	</select>
	
	<!-- 축제 리스트 기간별 검색 + 찜 횟수별 정렬 sql -->
	<select id="date_jjim" parameterType="festivalVO" resultType="festivalVO">
		select * from festival where fstv_startdate &gt;= #{date1} and fstv_enddate &lt;= #{date2}
		order by fstv_jjimCount desc limit #{index}, 9
	</select>
	
	<!-- 축제 상세 데이터 전체 부스 등록순으로 가져오는 sql -->
	<select id="booth_in" parameterType="festivalVO" resultType="festivalBoothVO">
		select	b.booth_no, b.booth_name,
				round(coalesce(avg(r.review_starpoint), 0), 1) as booth_starpoint,
				b.booth_category, b.booth_image
		from booth b
		left join review r on b.booth_no = r.booth_no
		where b.fstv_no = #{fstv_no} and booth_ban = 0
		group by b.booth_no, b.booth_name, b.booth_category, b.booth_image
		order by b.booth_no
	</select>
	
	<!-- 축제 상세 데이터 전체 부스 별점순으로 가져오는 sql -->
	<select id="booth_star" parameterType="festivalVO" resultType="festivalBoothVO">
		select 	b.booth_no, b.booth_name,
				round(coalesce(avg(r.review_starpoint), 0), 1) as booth_starpoint,
				b.booth_category, b.booth_image 
		from booth b
		left join review r on b.booth_no = r.booth_no 
		where b.fstv_no = #{fstv_no} and booth_ban = 0
		group by b.booth_no, b.booth_name, b.booth_category, b.booth_image 
		order by booth_starpoint desc
	</select>
	
	<!-- 헤더 검색기능 기본순 구현 -->
	<select id="search1" parameterType="String" resultType="festivalVO">
		select * from festival where fstv_startdate &lt;= current_date() and fstv_enddate &gt;= current_date()
		and ( fstv_title like concat('%', #{title}, '%') or fstv_addr1 like concat ('%', #{title}, '%'))
		order by fstv_startdate desc
	</select>
	<select id="search2" parameterType="String" resultType="festivalVO">
		select * from festival where fstv_startdate &gt; current_date()
		and ( fstv_title like concat('%', #{title}, '%') or fstv_addr1 like concat ('%', #{title}, '%'))
		order by fstv_startdate
	</select>
	<select id="search3" parameterType="String" resultType="festivalVO">
		select * from festival where fstv_enddate &lt; current_date()
		and ( fstv_title like concat('%', #{title}, '%') or fstv_addr1 like concat ('%', #{title}, '%'))
		order by fstv_startdate desc
	</select>
	
	<!-- fstv_map 지역별 검색 구현 -->
	<select id="map1" parameterType="String" resultType="festivalVO">
		select * from festival where fstv_startdate &lt;= current_date() and fstv_enddate &gt;= current_date()
		and fstv_addr1 like concat('%', #{region}, '%') order by fstv_startdate desc
	</select>
	<select id="map2" parameterType="String" resultType="festivalVO">
		select * from festival where fstv_startdate &gt; current_date()
		and fstv_addr1 like concat('%', #{region}, '%') order by fstv_startdate
	</select>
	<select id="map3" parameterType="String" resultType="festivalVO">
		select * from festival where fstv_enddate &lt; current_date()
		and fstv_addr1 like concat('%', #{region}, '%') order by fstv_startdate desc
	</select>
	
	<select id="jjimcnt" parameterType="jjimVO" resultType="int">
		select fstv_jjimCount from festival where fstv_no = #{fstv_no}
	</select>
	
	<update id="upcnt" parameterType="jjimVO">
		update festival set fstv_jjimCount = #{fstv_jjimCount} where fstv_no = #{fstv_no}
	</update>
	
	<insert id="jjimchu" parameterType="jjimVO">
		insert into jjim values (#{user_id}, #{fstv_no}, null)
	</insert>
	
	<select id="jjimsearch" parameterType="jjimVO" resultType="int">
		select count(*) from jjim where user_id = #{user_id} and fstv_no = #{fstv_no}
	</select>
	
	<delete id="jjimsak" parameterType="jjimVO">
		delete from jjim where fstv_no = #{fstv_no} and user_id = #{user_id}
	</delete>
	
	<select id="boothup" resultType="festivalBoothVO">
		select 	f.fstv_title, b.booth_no, b.booth_name,
				round(avg(r.review_starpoint), 1) as booth_starpoint,
				b.booth_introduction, count(r.review_no) as review_cnt
		from booth b
		join review r on b.booth_no = r.booth_no
		join festival f on b.fstv_no = f.fstv_no
		where booth_ban = 0
		group by f.fstv_title, b.booth_no, b.booth_name, b.booth_introduction
		order by review_cnt desc limit 4
	</select>
	
</mapper>
